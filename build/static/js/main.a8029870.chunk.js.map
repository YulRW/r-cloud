{"version":3,"sources":["api/index.ts","App.tsx","index.tsx"],"names":["axios","defaults","timeout","baseURL","interceptors","request","use","config","data","JSON","stringify","headers","error","Promise","reject","response","errCode","console","log","filterTypeArr","type","name","App","useState","imgSrc","setimgSrc","filterType","setfilterType","ignoreDrag","e","stopPropagation","preventDefault","id","className","onDrop","file","dataTransfer","files","reader","FileReader","onload","target","result","readAsDataURL","onDragEnter","onDragOver","width","src","Group","onChange","value","defaultValue","map","n","Button","style","backgroundColor","Math","floor","random","toString","padEnd","title","color","size","shape","display","onClick","url","FilterType","Image","RspImgType","resolve","post","then","err","res","ResultImage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAMAA,IAAMC,SAASC,QAAU,IACzBF,IAAMC,SAASE,QAAU,sEAKzBH,IAAMI,aAAaC,QAAQC,KACzB,SAACC,GAKC,OAJAA,EAAOC,KAAOC,KAAKC,UAAUH,EAAOC,MACpCD,EAAOI,QAAU,CACf,eAAgB,oBAEXJ,KAET,SAACK,GACC,OAAOC,QAAQC,OAAOF,MAO1BZ,IAAMI,aAAaW,SAAST,KAC1B,SAACS,GAIC,OAH8B,IAA1BA,EAASP,KAAKQ,SAChBC,QAAQC,IAAI,gBAEPH,KAET,SAACH,GACCK,QAAQC,IAAI,iCAASN,M,YC/BnBO,EAAgB,CACpB,CAAEC,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,EAAGC,KAAM,gBACjB,CAAED,KAAM,GAAIC,KAAM,sBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,4BAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,sBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,iBAClB,CAAED,KAAM,GAAIC,KAAM,iBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,gBAClB,CAAED,KAAM,GAAIC,KAAM,iBAkFLC,MA1Ef,WACE,MAA4BC,mBAAc,IAA1C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAuBMC,EAAa,SAACC,GAClBA,EAAEC,kBACFD,EAAEE,kBAeJ,OACE,gCACE,qBACEC,GAAG,UACHC,UAAU,qFACVC,OA1Ca,SAACL,GAClBA,EAAEC,kBACFD,EAAEE,iBAGF,IACII,EADON,EAAEO,aACGC,MAAM,GAGlBC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAAUX,GAExBJ,EAAUI,EAAEY,OAAQC,SAGtBJ,EAAOK,cAAcR,IA2BjBS,YAAahB,EACbiB,WAAYjB,EALd,SAOGJ,EAAS,cAAC,IAAD,CAAOsB,MAAO,IAAKC,IAAKvB,IAAa,mCARnD,iCAWE,cAAC,IAAMwB,MAAP,CAAaC,SAAU,SAACpB,GAAD,OAAOF,EAAcE,EAAEY,OAAOS,QAAQC,aAAc,EAA3E,SACGhC,EAAciC,KAAI,SAACC,GAAD,OACjB,cAAC,IAAMC,OAAP,CAAcJ,MAAOG,EAAEjC,KAAmBmC,MAAO,CAACC,gBA3DpD,IAAIC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAAIC,OAAO,EAAG,MA2D9D,SAAmFR,EAAEhC,MAAnDgC,EAAEjC,WAGxC,cAAC,IAAD,CAAS0C,MAAM,iCAAQC,MAAM,OAA7B,SACE,cAAC,IAAD,CACEC,KAAK,QACLC,MAAM,SACNV,MAAO,CAAEW,QAAS,SAClBjC,UAAU,+BACVkC,QAlCe,WDtDlB,IAAcC,EAAa5D,GAAb4D,ECuDZ,YDvDyB5D,ECuDZ,CAChB6D,WAAY3C,EACZ4C,MAAO9C,EACP+C,WAAY,UDzDT,IAAI1D,SAAQ,SAAC2D,EAAS1D,GAC3Bd,IACGyE,KAAKL,EAAK5D,GACVkE,MACC,SAAC3D,GACCyD,EAAQzD,EAASP,SAEnB,SAACmE,GACC7D,EAAO6D,UCkDVD,MAAK,SAACE,GACP3D,QAAQC,IAAI0D,EAAK,SACjBnD,EAAU,yBAA2BmD,EAAIpE,KAAKqE,iBAsB5C,gC,OChJRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a8029870.chunk.js","sourcesContent":["/**\n * 网络请求配置\n */\nimport axios from 'axios';\n\n//  超时\naxios.defaults.timeout = 100000;\naxios.defaults.baseURL = 'https://service-85njmqp6-1259710574.gz.apigw.tencentcs.com/release/'\n\n/**\n * http request 拦截器\n */\naxios.interceptors.request.use(\n  (config) => {\n    config.data = JSON.stringify(config.data);\n    config.headers = {\n      'Content-Type': 'application/json',\n    };\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n/**\n * http response 拦截器\n */\naxios.interceptors.response.use(\n  (response) => {\n    if (response.data.errCode === 2) {\n      console.log('过期');\n    }\n    return response;\n  },\n  (error) => {\n    console.log('请求出错：', error);\n  }\n);\n\n/**\n * 封装get方法\n * @param url  请求url\n * @param params  请求参数\n * @returns {Promise}\n */\nexport function get(url: string, params = {}) {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url, {\n        params: params,\n      })\n      .then((response) => {\n        resolve(response.data);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\n/**\n * 封装post请求\n * @param url\n * @param data\n * @returns {Promise}\n */\n\nexport function post(url: string, data: any) {\n  return new Promise((resolve, reject) => {\n    axios\n      .post(url, data)\n      .then(\n        (response) => {\n          resolve(response.data);\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n  });\n}\n\n//失败提示\nfunction msag(err: any) {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        alert(err.response.data.error.details);\n        break;\n      case 401:\n        alert('未授权，请登录');\n        break;\n\n      case 403:\n        alert('拒绝访问');\n        break;\n\n      case 404:\n        alert('请求地址出错');\n        break;\n\n      case 408:\n        alert('请求超时');\n        break;\n\n      case 500:\n        alert('服务器内部错误');\n        break;\n\n      case 501:\n        alert('服务未实现');\n        break;\n\n      case 502:\n        alert('网关错误');\n        break;\n\n      case 503:\n        alert('服务不可用');\n        break;\n\n      case 504:\n        alert('网关超时');\n        break;\n\n      case 505:\n        alert('HTTP版本不受支持');\n        break;\n      default:\n    }\n  }\n}\n","import { Button, Image, Radio, Tooltip } from 'antd';\nimport React, { useState } from 'react';\nimport { get, post } from './api';\n\n// 滤镜数据\nconst filterTypeArr = [\n  { type: 1, name: '白茶' },\n  { type: 2, name: '白皙' },\n  { type: 3, name: '初夏' },\n  { type: 4, name: '东京' },\n  { type: 5, name: '告白' },\n  { type: 6, name: '暖阳' },\n  { type: 7, name: '蔷薇' },\n  { type: 8, name: '清澄' },\n  { type: 9, name: '清透' },\n  { type: 10, name: '甜薄荷' },\n  { type: 11, name: '默认' },\n  { type: 12, name: '心动' },\n  { type: 13, name: '哑灰' },\n  { type: 14, name: '樱桃布丁' },\n  { type: 15, name: '自然' },\n  { type: 16, name: '清逸' },\n  { type: 17, name: '黑白' },\n  { type: 18, name: '水果' },\n  { type: 19, name: '爱情' },\n  { type: 20, name: '冬日' },\n  { type: 21, name: '相片' },\n  { type: 22, name: '夏日' },\n  { type: 23, name: '香氛' },\n  { type: 24, name: '魅惑' },\n  { type: 25, name: '悸动' },\n  { type: 26, name: '沙滩' },\n  { type: 27, name: '街拍' },\n  { type: 28, name: '甜美' },\n  { type: 29, name: '初吻' },\n  { type: 30, name: '午后' },\n  { type: 31, name: '活力' },\n  { type: 32, name: '朦胧' },\n  { type: 33, name: '悦动' },\n  { type: 34, name: '时尚' },\n  { type: 35, name: '气泡' },\n  { type: 36, name: '柠檬' },\n  { type: 37, name: '棉花糖' },\n  { type: 38, name: '小溪' },\n  { type: 39, name: '丽人' },\n  { type: 40, name: '咖啡' },\n  { type: 41, name: '嫩芽' },\n  { type: 42, name: '热情' },\n  { type: 43, name: '渐暖' },\n  { type: 44, name: '早餐' },\n  { type: 45, name: '白茶' },\n  { type: 46, name: '白嫩' },\n  { type: 47, name: '圣代' },\n  { type: 48, name: '森林' },\n  { type: 49, name: '冲浪' },\n  { type: 50, name: '奶咖' },\n  { type: 51, name: '清澈' },\n  { type: 52, name: '微风' },\n  { type: 53, name: '日落' },\n  { type: 54, name: '水光' },\n  { type: 55, name: '日系' },\n  { type: 56, name: '星光' },\n  { type: 57, name: '阳光' },\n  { type: 58, name: '落叶' },\n  { type: 59, name: '生机' },\n  { type: 60, name: '甜心' },\n  { type: 61, name: '清逸' },\n  { type: 62, name: '春意' },\n  { type: 63, name: '罗马' },\n  { type: 64, name: '青涩' },\n  { type: 65, name: '清风' },\n  { type: 66, name: '暖心' },\n  { type: 67, name: '海水' },\n  { type: 68, name: '神秘' },\n  { type: 69, name: '旧调1' },\n  { type: 70, name: '旧调2' },\n  { type: 71, name: '雪顶' },\n  { type: 72, name: '日光' },\n  { type: 73, name: '浮云' },\n  { type: 74, name: '流彩' },\n  { type: 75, name: '胶片' },\n  { type: 76, name: '回味' },\n  { type: 77, name: '奶酪' },\n  { type: 78, name: '蝴蝶' },\n];\n\n// 随机十六进制代码, eg: #ff0000\nfunction randomColor(){\n\treturn '#'+Math.floor(Math.random() * 0xffffff).toString(16).padEnd(6, '0');\n}\n\nfunction App() {\n  const [imgSrc, setimgSrc] = useState<any>('');\n  const [filterType, setfilterType] = useState(1);\n\n  // 拖拽完图片后处理\n  const handleDrop = (e: any) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    //取得拖进来的文件\n    let data = e.dataTransfer;\n    let file = data.files[0];\n\n    //创建FileReader\n    let reader = new FileReader();\n    //告诉它在准备好数据之后做什么\n    reader.onload = function (e) {\n      //使用图像URL来绘制dropBox的背景\n      setimgSrc(e.target!.result);\n    };\n    //读取图片\n    reader.readAsDataURL(file);\n  };\n\n  // 忽略其他事件\n  const ignoreDrag = (e: any) => {\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  // 美妆图片\n  const handleBeautify = () => {\n    post('/beautify', {\n      FilterType: filterType,\n      Image: imgSrc,\n      RspImgType: 'base64',\n    }).then((res: any) => {\n      console.log(res, 'rrrrr');\n      setimgSrc('data:image/png;base64,' + res.data.ResultImage);\n    });\n  };\n\n  return (\n    <div>\n      <div\n        id=\"imgDrag\"\n        className=\"w-64 h-64 mx-auto shadow-md my-4 flex justify-center items-center hover:shadow-2xl\"\n        onDrop={handleDrop}\n        onDragEnter={ignoreDrag}\n        onDragOver={ignoreDrag}\n      >\n        {imgSrc ? <Image width={500} src={imgSrc} /> : '请上传图片'}\n      </div>\n      滤镜效果：\n      <Radio.Group onChange={(e) => setfilterType(e.target.value)} defaultValue={1}>\n        {filterTypeArr.map((n) => (\n          <Radio.Button value={n.type} key={n.type} style={{backgroundColor:randomColor()}}>{n.name}</Radio.Button>\n        ))}\n      </Radio.Group>\n      <Tooltip title=\"一键美妆！\" color='pink'>\n        <Button\n          size=\"large\"\n          shape=\"circle\"\n          style={{ display: 'block' }}\n          className=\"animate-bounce mx-auto mt-10\"\n          onClick={handleBeautify}\n        >\n          🔮\n        </Button>\n      </Tooltip>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}